@model List<MatchUserDtocs>
@{
    ViewData["Title"] = "Hem";
}

<div class="slideshow-container">
    @foreach (var user in Model)
    {
        <div class="mySlides">
            <div class="invisible" id="id"> @user.ID</div>

            <div id="page_UserProfile">
                <div class="profile-container p-5 container">
                    <div class="card" style="width: 25rem;">
                        <div class="carousel slide" id="profileimages" data-ride="carousel">
                            <ol class="carousel-indicators">
                                @for (int i = 0; i < user.Images.Count; i++)
                                {
                                    if (i == 0)
                                    {
                                        <li data-target="#profileimages" data-slide-to="@i"></li>
                                    }
                                    else
                                    {
                                        <li data-target="#profileimages" data-slide-to="@i"></li>
                                    }
                                }
                            </ol>
                            <div class="carousel-inner d">
                                @for (int i = 0; i < user.Images.Count; i++)
                                {
                                    if (i == 0)
                                    {
                                        <div class="carousel-item active">
                                            <img class="d-block w-100" data-src="@user.Images[i].Url" alt="Gick ej att ladda bild" />
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="carousel-item">
                                            <img class="d-block w-100" data-src="@user.Images[i].Url" alt="Gick ej att ladda bild" />
                                        </div>
                                    }
                                }
                            </div>
                            @*<a class="carousel-control-prev" href="#profileimages" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#profileimages" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>*@

                        </div>

                        <div class="container">
                            <h4><b>@user.Firstname @user.Surname @{var age = DateTime.Today.Year - user.Age.Year; } @age År</b></h4>
                            <p><i class="fas fa-venus-mars mr-2" style=" color: #eb6864"></i>@user.Gender</p>
                            <p><i class="fas fa-map-marker-alt mr-2" style=" color: #eb6864"></i>@user.Location</p>

                            @*<p style="opacity:1; color: green;">MATCHPERCENTAGE:<span>@user.ProtagonistMatchPercentage</span><span>%</span></p>*@

                        </div>
                        <div class="card-body profile-container border">
                            <button class="btn bg-primary text-white btn-block mt-2 mr-2" type="submit" name="declineFriendrequest" onclick="DeclineFriend()">Neka</button>
                            <button class="btn btn-success btn-block mt-2 ml-2" type="submit" name="friendrequest" onclick="FriendRequest(@user.ID)">Matcha</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    var declineFriendbtn = document.querySelector('button[name="declineFriendrequest"]')
    var friendRequestbtn = document.querySelector('button[name="friendrequest"]')

    var slideIndex = 1;
    showSlides(slideIndex);


    // Next/previous controls
    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    // Thumbnail image controls
    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        console.log('n', n)
        var i;
        var slides = document.getElementsByClassName("mySlides");
        var dots = document.getElementsByClassName("dot");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }

        //for (i = 0; i < dots.length; i++) {
        //    dots[i].className = dots[i].className.replace(" active", "");
        //}

        //Break if not element declared
        if (slides.length < 1) {
            Console.error('Den här mobbades och var elak mot resten av projektet. Så gjorde en valideringscheck')
            return
        }

        console.log('2',[...slides[slideIndex].querySelectorAll('img[data-src]')])

            // Load all images in active user from data-src
            ;[...slides[slideIndex-1].querySelectorAll('img[data-src]')]
                .map(img => img.setAttribute('src', img.getAttribute('data-src')))


        slides[slideIndex - 1].style.display = "block";
        //dots[slideIndex - 1].className += " active";
    }

    function FriendRequest(id) {
        //var done = false
        console.log('friend')

        var data = {
            //ID: document.querySelector("#id").textContent.replace(' ', '')
            ID: id
        }


        fetch(`/api/home/${data.ID}`, {
            method: 'PUT',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: null
        })
            .then(res => res.json())
            .then(data => {
                if (data.Status === "Fail") {
                    Successbox.element.classList.add('bg-danger')
                    Successbox.setColor('white')
                    Successbox.show(data.Message, "Fel")

                    window.setTimeout(() => {
                        Successbox.hide()
                        plusSlides(1);
                    }, 2000)

                }
                else {
                    Successbox.element.classList.remove('bg-danger')
                    Successbox.element.classList.add('bg-success')
                    Successbox.setColor('white')
                    Successbox.show(data.Message)
                    window.setTimeout(() => {
                        Successbox.hide()
                        plusSlides(1);
                    }, 2000)
                }
            })
            .catch(err => console.error(err))

    }

    function DeclineFriend() {
        console.log('no friend')


        plusSlides(1)
    }
</script>








